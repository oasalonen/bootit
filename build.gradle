buildscript {
    ext.kotlin_version = '1.2.30'
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:2.0.0.RELEASE")
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-noarg:$kotlin_version"
    }
}

plugins {
    id 'com.palantir.docker' version '0.19.2'
}

group 'bootit'
version '1.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: "kotlin-jpa"
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.springframework.boot:spring-boot-starter-data-jpa")
    compile("org.springframework.boot:spring-boot-starter-actuator")
    compile("io.micrometer:micrometer-registry-prometheus:latest.release")
    compile("com.h2database:h2")
    compile group: 'org.postgresql', name: 'postgresql', version: '42.2.1'
    compile("org.springframework.boot:spring-boot-starter-amqp")
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    compile "org.jetbrains.kotlin:kotlin-reflect"

    compile "org.springframework.boot:spring-boot-devtools"

    compile "net.logstash.logback:logstash-logback-encoder:5.0"

    testCompile("org.springframework.boot:spring-boot-starter-test")
    testCompile 'com.tngtech.jgiven:jgiven-junit:0.15.3'
    testCompile("com.tngtech.jgiven:jgiven-spring:0.15.3")
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

bootJar {
}

docker {
    name "ollireg.azurecr.io/${project.group}/bootit:1.0.10"
    files jar.archivePath
    buildArgs(['JAR_FILE': "${jar.archiveName}"])
}